#!/bin/bash
alpine_mirror=http://nl.alpinelinux.org/alpine

set -eu -o pipefail
echo Standard build checks

make GOPTZ=-O1 debug && make GOPTZ=-O1 check
make realclean
make GOPTZ=-O1 debug && make GOPTZ=-O1 EMBED_GDBM=1 check
make realclean

echo Build TARBALL

VTAG=${TRAVIS_TAG:-$(git describe)}

rm -rf undup-$VTAG
mkdir undup-$VTAG
cp -a *.[ch] undup.1 LICENSE Makefile README.md lib regressions scripts undup-$VTAG
echo 'const char version[] = "'"$VTAG"'";' > undup-$VTAG/version.h
cat undup-$VTAG/version.h
tar zcf undup-$VTAG.tar.gz undup-$VTAG

echo Creating BINARY tarball
make realclean
make EMBED_GDBM=1 LXFLAGS=-static prod
tar zcvf undup-$VTAG.bin-$(uname -m),glibc.tar.gz undup undup.1

echo Trying to create BINARY tarball using musl...
make realclean
docker exec -t void make -C hostrepo EMBED_GDBM=1 LXFLAGS=-static prod
tar zcvf undup-$VTAG.bin-$(uname -m),musl.tar.gz undup undup.1

echo "======"
echo "ASSETS"
echo "======"
ls -sh undup-*.tar.gz



if ! sudo true ; then
  echo "Exiting... the rest of the script requires sudo priviledges"
  exit 0
fi
#######################################################################
# Disabled...
#######################################################################
exit 0

rmount() {
  local chrootdir="$1" d
  [ -z "$chrootdir" ] && return
  for d in dev sys proc tmp
  do
    sudo mount --bind /$d $chrootdir/$d || :
  done
}
rumount() {
  local chrootdir="$1" d
  [ -z "$chrootdir" ] && return
  for d in dev sys proc tmp
  do
    sudo umount $chrootdir/$d || :
  done
}

build_alpine() {
  # Create Alpine Linux packages
  local release="$1" version

  case "$release" in
    3.7)  version=2.9.1-r2 ;;
    3.8)  version=2.10.0-r0 ;;
    *) echo "Unsupported release: $release"; exit 1 ;;
  esac
  
  local alpine_dir=alpine-v$release
  mkdir -p ${alpine_dir}
  
  local apkfile=$alpine_dir/apk-tools-static.apk
  [ ! -f $apkfile  ] && wget -O$apkfile ${alpine_mirror}/v${release}/main/x86_64/apk-tools-static-${version}.apk
  [ ! -f $alpine_dir/sbin/apk.static ] && tar -zxf $apkfile -C $alpine_dir

  local chrootdir=$alpine_dir/chroot
  sudo $alpine_dir/sbin/apk.static \
	  --repository ${alpine_mirror}/v${release}/main \
	  -U \
	  --allow-untrusted \
	  --root ${chrootdir} \
	  --initdb \
	  add alpine-base alpine-sdk gdbm gdbm-dev

  sudo chmod 777 $chrootdir
  mkdir -p $chrootdir/build/assets
  cp -a undup-$VTAG.tar.gz $chrootdir/build/undup-$VTAG.tar.gz
  cp -a alpine/. $chrootdir/build/assets
  rm -f $chrootdir/build/.abuild
  ln -sf assets $chrootdir/build/.abuild

  # Encrypt Key with thsi comand
  # openssl enc -aes-256-cbc -salt -in builder-5b1ae402.rsa -out builder-5b1ae402.rsa.enc -k $alpine_signing_key
  openssl enc -aes-256-cbc -d \
	-in alpine/builder-5b1ae402.rsa.enc \
	-out $chrootdir/build/.abuild/builder-5b1ae402.rsa \
	-k $alpine_signing_key

  local apk_ver=${TRAVIS_TAG:-$(git describe |sed 's/-\([0-9]*\)-\([^-]*\)$/.\1_git'"$(date +%Y%m%d)"'/')}
  sed \
	-e 's/<VTAG>/'"$VTAG"'/' \
	-e 's/<PKGVER>/'"$apk_ver"'/' \
	< alpine/APKBUILD > $chrootdir/build/APKBUILD

  grep -q "^$USER:" $chrootdir/etc/group || sudo chroot $chrootdir addgroup -g $(id -g) $USER
  grep -q "^$USER:" $chrootdir/etc/passwd || sudo chroot $chrootdir adduser -h /build -H -D -G $USER -u $(id -u) $USER

  rm -rf $chrootdir/build/packages # Empty this so we don't pick up strays...
  rmount $chrootdir; trap "rumount $chrootdir" EXIT
  sudo chroot $chrootdir su - -s /bin/sh $USER  -c abuild
  rumount $chrootdir ; trap "" EXIT

  find $chrootdir/build/packages -name '*.apk' | (while read fp
  do
    nm=$(basename $fp)
    cp -a "$fp" "alpine-v${release},$nm"
    ls -sh "alpine-v${release},$nm"
  done)
}

#~ mknod -m 666 ${chrootdir}/dev/full c 1 7
#~ mknod -m 666 ${chrootdir}/dev/ptmx c 5 2
#~ mknod -m 644 ${chrootdir}/dev/random c 1 8
#~ mknod -m 644 ${chrootdir}/dev/urandom c 1 9
#~ mknod -m 666 ${chrootdir}/dev/zero c 1 5
#~ mknod -m 666 ${chrootdir}/dev/tty c 5 0
#~ cp /etc/resolv.conf ${chrootdir}/resolv.conf
#~ mkdir -p ${chrootdir}/root
#~ /sbin/chroot ${chrootdir} /bin/sh

build_alpine 3.8
build_alpine 3.7


